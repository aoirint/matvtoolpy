name: Build

on:
  push:
    branches:
      - main
  release:
    types:
      - created

permissions:
  contents: write

env:
  VERSION: ${{ (github.event.release.tag_name != '' && github.event.release.tag_name) || '0.0.0' }}
  PYTHON_VERSION: '3.11.9'

jobs:
  release-pypi:
    if: github.event.release.tag_name != ''

    strategy:
      fail-fast: false
      matrix:
        include:
          -
            os: 'ubuntu-22.04'
            sed: 'sed'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        shell: bash
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Install gsed for macOS
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install gnu-sed

      - name: Replace Version
        shell: bash
        run: |
          ${{ matrix.sed }} -i "s/__VERSION__ = \"0.0.0\"/__VERSION__ = \"${{ env.VERSION }}\"/" aoirint_matvtool/__init__.py
          ${{ matrix.sed }} -i "s/version = \"0.0.0\"/version = \"${{ env.VERSION }}\"/" pyproject.toml

      - name: Install Dependencies
        shell: bash
        run: poetry install

      - name: Build and publish Package
        shell: bash
        run: poetry publish --build --username "__token__" --password "${{ secrets.PYPI_API_TOKEN }}"

  release-binary:
    if: github.event.release.tag_name != ''

    strategy:
      fail-fast: false
      matrix:
        include:
          -
            os: 'ubuntu-22.04'
            artifact_name: matvtool
            asset_name: matvtool-linux-amd64
            sed: 'sed'
          -
            os: 'windows-2022'
            artifact_name: matvtool.exe
            asset_name: matvtool-windows-amd64.exe
            sed: 'sed'
          -
            os: 'macos-12'
            artifact_name: matvtool
            asset_name: matvtool-macos-amd64
            sed: 'gsed'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        shell: bash
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Install gsed for macOS
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install gnu-sed

      - name: Replace Version
        shell: bash
        run: |
          ${{ matrix.sed }} -i "s/__VERSION__ = \"0.0.0\"/__VERSION__ = \"${{ env.VERSION }}\"/" aoirint_matvtool/__init__.py
          ${{ matrix.sed }} -i "s/version = \"0.0.0\"/version = \"${{ env.VERSION }}\"/" pyproject.toml

      - name: Install Dependencies
        shell: bash
        run: poetry install

      - name: Build Binary
        run: |
          poetry run pyinstaller --name matvtool --onefile binary_entrypoint.py

      - name: Upload Binary to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
